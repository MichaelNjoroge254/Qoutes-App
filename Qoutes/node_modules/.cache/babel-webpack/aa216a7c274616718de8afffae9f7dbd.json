{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { Quote } from '../quote';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\n\nfunction QuoteFormComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2, \"This field is required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction QuoteFormComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2, \"This field is required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction QuoteFormComponent_span_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelementStart(1, \"p\");\n    i0.ɵɵtext(2, \"This field is required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\n\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\n\nexport let QuoteFormComponent = /*#__PURE__*/(() => {\n  class QuoteFormComponent {\n    constructor() {\n      this.addQuote = new EventEmitter();\n      this.newQuote = new Quote(\"\", \"\", \"\", new Date());\n    }\n\n    submitQuote(get) {\n      // console.log(get.value);\n      var formQuote = new Quote(get.value.quotes, get.value.author, get.value.user, new Date());\n      this.addQuote.emit(formQuote);\n      get.reset();\n    }\n\n    ngOnInit() {}\n\n  }\n\n  QuoteFormComponent.ɵfac = function QuoteFormComponent_Factory(t) {\n    return new (t || QuoteFormComponent)();\n  };\n\n  QuoteFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: QuoteFormComponent,\n    selectors: [[\"app-quote-form\"]],\n    outputs: {\n      addQuote: \"addQuote\"\n    },\n    decls: 29,\n    vars: 16,\n    consts: [[\"id\", \"form\", 1, \"container-fluid\"], [1, \"text-center\"], [3, \"ngSubmit\"], [\"quoteForm\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"quotes\"], [\"required\", \"\", \"rows\", \"4\", \"id\", \"quotes\", \"name\", \"quotes\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"quotes\", \"ngModel\"], [1, \"invalid-feedback\"], [4, \"ngIf\"], [\"for\", \"author\"], [\"type\", \"text\", \"required\", \"\", \"id\", \"author\", \"name\", \"author\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"author\", \"ngModel\"], [\"for\", \"user\"], [\"type\", \"text\", \"required\", \"\", \"id\", \"user\", \"name\", \"user\", 1, \"form-control\", 3, \"ngModel\", \"ngClass\", \"ngModelChange\"], [\"user\", \"ngModel\"], [\"type\", \"submit\", 1, \"btn\", \"btn-success\", 3, \"disabled\"]],\n    template: function QuoteFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r7 = i0.ɵɵgetCurrentView();\n\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"h2\", 1);\n        i0.ɵɵtext(2, \"Add Quote\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"hr\");\n        i0.ɵɵelementStart(4, \"form\", 2, 3);\n        i0.ɵɵlistener(\"ngSubmit\", function QuoteFormComponent_Template_form_ngSubmit_4_listener() {\n          i0.ɵɵrestoreView(_r7);\n\n          const _r0 = i0.ɵɵreference(5);\n\n          return ctx.submitQuote(_r0);\n        });\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Quote\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"textarea\", 6, 7);\n        i0.ɵɵlistener(\"ngModelChange\", function QuoteFormComponent_Template_textarea_ngModelChange_9_listener($event) {\n          return ctx.newQuote.quote = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"span\", 8);\n        i0.ɵɵtemplate(12, QuoteFormComponent_span_12_Template, 3, 0, \"span\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 4);\n        i0.ɵɵelementStart(14, \"label\", 10);\n        i0.ɵɵtext(15, \"Author\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 11, 12);\n        i0.ɵɵlistener(\"ngModelChange\", function QuoteFormComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.newQuote.author = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"span\", 8);\n        i0.ɵɵtemplate(19, QuoteFormComponent_span_19_Template, 3, 0, \"span\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 4);\n        i0.ɵɵelementStart(21, \"label\", 13);\n        i0.ɵɵtext(22, \"Posted by\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"input\", 14, 15);\n        i0.ɵɵlistener(\"ngModelChange\", function QuoteFormComponent_Template_input_ngModelChange_23_listener($event) {\n          return ctx.newQuote.user = $event;\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"span\", 8);\n        i0.ɵɵtemplate(26, QuoteFormComponent_span_26_Template, 3, 0, \"span\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"button\", 16);\n        i0.ɵɵtext(28, \"Add quote\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(5);\n\n        const _r1 = i0.ɵɵreference(10);\n\n        const _r3 = i0.ɵɵreference(17);\n\n        const _r5 = i0.ɵɵreference(24);\n\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngModel\", ctx.newQuote.quote)(\"ngClass\", i0.ɵɵpureFunction1(10, _c0, (_r1.touched || _r1.dirty) && !_r1.valid));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", _r1.errors == null ? null : _r1.errors.required);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newQuote.author)(\"ngClass\", i0.ɵɵpureFunction1(12, _c0, (_r3.touched || _r3.dirty) && !_r3.valid));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", _r3.errors == null ? null : _r3.errors.required);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.newQuote.user)(\"ngClass\", i0.ɵɵpureFunction1(14, _c0, (_r5.touched || _r5.dirty) && !_r5.valid));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", _r5.errors == null ? null : _r5.errors.required);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", !_r0.valid);\n      }\n    },\n    directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.NgForm, i1.DefaultValueAccessor, i1.RequiredValidator, i1.NgControlStatus, i1.NgModel, i2.NgClass, i2.NgIf],\n    styles: [\".form-control[_ngcontent-%COMP%]{background-color:#c4bfc2;color:#eef0f2;border-color:#eef0f2;border-radius:1px}hr[_ngcontent-%COMP%]{background-color:#acdfe2}#form[_ngcontent-%COMP%]{position:absolute;padding-right:5px;padding-left:5px;margin-right:auto;margin-left:auto;width:40%;float:right}@media only screen and (max-width: 768px){#form[_ngcontent-%COMP%]{position:absolute;width:100%}}button[_ngcontent-%COMP%], label[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-size:24px}button[_ngcontent-%COMP%]{border-radius:25px;font-family:dosis-bold}\"]\n  });\n  return QuoteFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}